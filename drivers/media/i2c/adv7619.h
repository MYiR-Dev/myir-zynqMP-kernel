typedef struct {
	uint8_t dev;
	uint8_t reg;
	uint8_t val;
} edidinfo;

edidinfo edid_data_2k[] = {
	{0x98, 0xF4, 0x80}, //CEC
	{0x98, 0xF5, 0x7C}, //INFOFRAM
	{0x98, 0xF8, 0x4C}, //DPLL
	{0x98, 0xF9, 0x64}, //KSV
	{0x98, 0xFA, 0x6C}, //EDID
	{0x98, 0xFB, 0x68}, //HDMI
	{0x98, 0xFD, 0x44}, //CP

	{0x64, 0x74, 0x00}, //Disable the Internal EDID for all ports

	{0x6C, 0x00, 0x00},

	{0x6C, 0x01, 0xFF},
	{0x6C, 0x02, 0xFF},
	{0x6C, 0x03, 0xFF},
	{0x6C, 0x04, 0xFF},
	{0x6C, 0x05, 0xFF},
	{0x6C, 0x06, 0xFF},
	{0x6C, 0x07, 0x00},
	{0x6C, 0x08, 0x10},
	{0x6C, 0x09, 0xec},
	{0x6C, 0x0A, 0x03},
	{0x6C, 0x0B, 0x00},
	{0x6C, 0x0C, 0x00},
	{0x6C, 0x0D, 0x00},
	{0x6C, 0x0E, 0x00},
	{0x6C, 0x0F, 0x00},

	{0x6C, 0x10, 0x02},
	{0x6C, 0x11, 0x1a},
	{0x6C, 0x12, 0x01},
	{0x6C, 0x13, 0x03},
	{0x6C, 0x14, 0xa1},
	{0x6C, 0x15, 0x33},
	{0x6C, 0x16, 0x1d},
	{0x6C, 0x17, 0x78},
	{0x6C, 0x18, 0x0a},
	{0x6C, 0x19, 0xec},
	{0x6C, 0x1A, 0x18},
	{0x6C, 0x1B, 0xa3},
	{0x6C, 0x1C, 0x54},
	{0x6C, 0x1D, 0x46},
	{0x6C, 0x1E, 0x98},
	{0x6C, 0x1F, 0x25},

	{0x6C, 0x20, 0x0f},
	{0x6C, 0x21, 0x48},
	{0x6C, 0x22, 0x4c},
	{0x6C, 0x23, 0x21},
	{0x6C, 0x24, 0x08},
	{0x6C, 0x25, 0x00},
	{0x6C, 0x26, 0xb3},
	{0x6C, 0x27, 0x00},
	{0x6C, 0x28, 0xd1},
	{0x6C, 0x29, 0xc0},
	{0x6C, 0x2A, 0x81},
	{0x6C, 0x2B, 0x80},
	{0x6C, 0x2C, 0x81},
	{0x6C, 0x2D, 0xc0},
	{0x6C, 0x2E, 0xa9},
	{0x6C, 0x2F, 0xc0},

	{0x6C, 0x30, 0x01},
	{0x6C, 0x31, 0x01},
	{0x6C, 0x32, 0x01},
	{0x6C, 0x33, 0x01},
	{0x6C, 0x34, 0x01},
	{0x6C, 0x35, 0x01},
	{0x6C, 0x36, 0x02},
	{0x6C, 0x37, 0x3a},
	{0x6C, 0x38, 0x80},
	{0x6C, 0x39, 0x18},
	{0x6C, 0x3A, 0x71},
	{0x6C, 0x3B, 0x38},
	{0x6C, 0x3C, 0x2D},
	{0x6C, 0x3D, 0x40},
	{0x6C, 0x3E, 0x58},
	{0x6C, 0x3F, 0x2c},

	{0x6C, 0x40, 0x45},
	{0x6C, 0x41, 0x00},
	{0x6C, 0x42, 0x80},
	{0x6C, 0x43, 0x38},
	{0x6C, 0x44, 0x74},
	{0x6C, 0x45, 0x00},
	{0x6C, 0x46, 0x00},
	{0x6C, 0x47, 0x1e},
	{0x6C, 0x48, 0x00},
	{0x6C, 0x49, 0x00},
	{0x6C, 0x4A, 0x00},
	{0x6C, 0x4B, 0xfc},
	{0x6C, 0x4C, 0x20},
	{0x6C, 0x4D, 0x44},
	{0x6C, 0x4E, 0x69},
	{0x6C, 0x4F, 0x67},

	{0x6C, 0x50, 0x69},
	{0x6C, 0x51, 0x6c},
	{0x6C, 0x52, 0x65},
	{0x6C, 0x53, 0x6e},
	{0x6C, 0x54, 0x74},
	{0x6C, 0x55, 0x44},
	{0x6C, 0x56, 0x56},
	{0x6C, 0x57, 0x49},
	{0x6C, 0x58, 0x2d},
	{0x6C, 0x59, 0x33},
	{0x6C, 0x5A, 0x00},
	{0x6C, 0x5B, 0x00},
	{0x6C, 0x5C, 0x00},
	{0x6C, 0x5D, 0x10},
	{0x6C, 0x5E, 0x00},
	{0x6C, 0x5F, 0x00},

	{0x6C, 0x60, 0x00},
	{0x6C, 0x61, 0x00},
	{0x6C, 0x62, 0x00},
	{0x6C, 0x63, 0x00},
	{0x6C, 0x64, 0x00},
	{0x6C, 0x65, 0x00},
	{0x6C, 0x66, 0x00},
	{0x6C, 0x67, 0x00},
	{0x6C, 0x68, 0x00},
	{0x6C, 0x69, 0x00},
	{0x6C, 0x6A, 0x00},
	{0x6C, 0x6B, 0x00},
	{0x6C, 0x6C, 0x00},
	{0x6C, 0x6D, 0x00},
	{0x6C, 0x6E, 0x00},
	{0x6C, 0x6F, 0x10},

	{0x6C, 0x70, 0x00},
	{0x6C, 0x71, 0x00},
	{0x6C, 0x72, 0x00},
	{0x6C, 0x73, 0x00},
	{0x6C, 0x74, 0x00},
	{0x6C, 0x75, 0x00},
	{0x6C, 0x76, 0x00},
	{0x6C, 0x77, 0x00},
	{0x6C, 0x78, 0x00},
	{0x6C, 0x79, 0x00},
	{0x6C, 0x7A, 0x00},
	{0x6C, 0x7B, 0x00},
	{0x6C, 0x7C, 0x00},
	{0x6C, 0x7D, 0x00},
	{0x6C, 0x7E, 0x00},
	{0x6C, 0x7F, 0x09},

	{0x6C, 0x80, 0x02},
	{0x6C, 0x81, 0x03},
	{0x6C, 0x82, 0x3D},
	{0x6C, 0x83, 0x71},
	{0x6C, 0x84, 0x4D},
	{0x6C, 0x85, 0x82},
	{0x6C, 0x86, 0x05},
	{0x6C, 0x87, 0x04},
	{0x6C, 0x88, 0x01},
	{0x6C, 0x89, 0x10},
	{0x6C, 0x8A, 0x11},
	{0x6C, 0x8B, 0x14},
	{0x6C, 0x8C, 0x13},
	{0x6C, 0x8D, 0x1F},
	{0x6C, 0x8E, 0x06},
	{0x6C, 0x8F, 0x15},
	{0x6C, 0x90, 0x03},
	{0x6C, 0x91, 0x12},
	{0x6C, 0x92, 0x3E},
	{0x6C, 0x93, 0x0F},
	{0x6C, 0x94, 0x7F},
	{0x6C, 0x95, 0x07},
	{0x6C, 0x96, 0x17},
	{0x6C, 0x97, 0x1F},
	{0x6C, 0x98, 0x38},
	{0x6C, 0x99, 0x1F},
	{0x6C, 0x9A, 0x07},
	{0x6C, 0x9B, 0x30},
	{0x6C, 0x9C, 0x2F},
	{0x6C, 0x9D, 0x07},
	{0x6C, 0x9E, 0x72},
	{0x6C, 0x9F, 0x3F},
	{0x6C, 0xA0, 0x7F},
	{0x6C, 0xA1, 0x72},
	{0x6C, 0xA2, 0x4F},
	{0x6C, 0xA3, 0x7F},
	{0x6C, 0xA4, 0x00},
	{0x6C, 0xA5, 0x57},
	{0x6C, 0xA6, 0x7F},
	{0x6C, 0xA7, 0x00},
	{0x6C, 0xA8, 0x5F},
	{0x6C, 0xA9, 0x7F},
	{0x6C, 0xAA, 0x01},
	{0x6C, 0xAB, 0x37},
	{0x6C, 0xAC, 0x7F},
	{0x6C, 0xAD, 0x72},
	{0x6C, 0xAE, 0x67},
	{0x6C, 0xAF, 0x7F},
	{0x6C, 0xB0, 0x00},
	{0x6C, 0xB1, 0x83},
	{0x6C, 0xB2, 0x4F},
	{0x6C, 0xB3, 0x00},
	{0x6C, 0xB4, 0x00},
	{0x6C, 0xB5, 0x67},
	{0x6C, 0xB6, 0x03},
	{0x6C, 0xB7, 0x0C},
	{0x6C, 0xB8, 0x00},
	{0x6C, 0xB9, 0x10},
	{0x6C, 0xBA, 0x00},
	{0x6C, 0xBB, 0xB8},
	{0x6C, 0xBC, 0x2D},
	{0x6C, 0xBD, 0x01},
	{0x6C, 0xBE, 0x1D},
	{0x6C, 0xBF, 0x00},
	{0x6C, 0xC0, 0x72},
	{0x6C, 0xC1, 0x51},
	{0x6C, 0xC2, 0xD0},
	{0x6C, 0xC3, 0x1E},
	{0x6C, 0xC4, 0x20},
	{0x6C, 0xC5, 0x6E},
	{0x6C, 0xC6, 0x28},
	{0x6C, 0xC7, 0x55},
	{0x6C, 0xC8, 0x00},
	{0x6C, 0xC9, 0x81},
	{0x6C, 0xCA, 0x49},
	{0x6C, 0xCB, 0x00},
	{0x6C, 0xCC, 0x00},
	{0x6C, 0xCD, 0x00},
	{0x6C, 0xCE, 0x1E},
	{0x6C, 0xCF, 0xD6},
	{0x6C, 0xD0, 0x09},
	{0x6C, 0xD1, 0x80},
	{0x6C, 0xD2, 0xA0},
	{0x6C, 0xD3, 0x20},
	{0x6C, 0xD4, 0xE0},
	{0x6C, 0xD5, 0x2D},
	{0x6C, 0xD6, 0x10},
	{0x6C, 0xD7, 0x10},
	{0x6C, 0xD8, 0x60},
	{0x6C, 0xD9, 0xA2},
	{0x6C, 0xDA, 0x00},
	{0x6C, 0xDB, 0x81},
	{0x6C, 0xDC, 0x60},
	{0x6C, 0xDD, 0x00},
	{0x6C, 0xDE, 0x08},
	{0x6C, 0xDF, 0x08},
	{0x6C, 0xE0, 0x18},
	{0x6C, 0xE1, 0x8C},
	{0x6C, 0xE2, 0x0A},
	{0x6C, 0xE3, 0xD0},
	{0x6C, 0xE4, 0x90},
	{0x6C, 0xE5, 0x20},
	{0x6C, 0xE6, 0x40},
	{0x6C, 0xE7, 0x31},
	{0x6C, 0xE8, 0x20},
	{0x6C, 0xE9, 0x0C},
	{0x6C, 0xEA, 0x40},
	{0x6C, 0xEB, 0x55},
	{0x6C, 0xEC, 0x00},
	{0x6C, 0xED, 0x81},
	{0x6C, 0xEE, 0x60},
	{0x6C, 0xEF, 0x00},
	{0x6C, 0xF0, 0x00},
	{0x6C, 0xF1, 0x00},
	{0x6C, 0xF2, 0x18},
	{0x6C, 0xF3, 0x00},
	{0x6C, 0xF4, 0x00},
	{0x6C, 0xF5, 0x00},
	{0x6C, 0xF6, 0x00},
	{0x6C, 0xF7, 0x00},
	{0x6C, 0xF8, 0x00},
	{0x6C, 0xF9, 0x00},
	{0x6C, 0xFA, 0x00},
	{0x6C, 0xFB, 0x00},
	{0x6C, 0xFC, 0x00},
	{0x6C, 0xFD, 0x00},
	{0x6C, 0xFE, 0x00},
	{0x6C, 0xFF, 0x46},
		
	{0x64, 0x71, 0x00}, //Set the Most Significant Bit of the SPA location to 0
	{0x64, 0x52, 0x20}, //Set the SPA for port B
	{0x64, 0x53, 0x00}, //Set the SPA for port B.
	{0x64, 0x70, 0xB9}, //Set the Least Significant Byte of the SPA location
	{0x64, 0x74, 0x03}, //Enable the Internal EDID for ports
	{0xFF, 0xFF, 0xFF}
};

typedef struct
{
	uint8_t dev;
	uint8_t reg;
	uint8_t val;
} reginfo;

reginfo adv7619_register_data[] = {

	{0x98, 0xF4,0x80}, //CEC
	{0x98, 0xF5,0x7C}, //INFOFRAME
	{0x98, 0xF8,0x4C}, //DPLL
	{0x98, 0xF9,0x64}, //KSV
	{0x98, 0xFA,0x6C}, //EDID
	{0x98, 0xFB,0x68}, //HDMI
	{0x98, 0xFD,0x44}, //CP

	{0x68, 0xC0,0x03}, //ADI Required Write
	//{0x98, 0x00,0x19}, //Set VID_STD
	//{0x98, 0x01,0x05}, //Prim_Mode =101b HDMI-Comp
	{0x98, 0x00,0x19}, //Set VID_STD 1920x1080@60Hz HD1x1
	{0x98, 0x01,0x05}, //Prim_Mode =101b HDMI-Comp  
	{0x98, 0x02,0xF2}, //Auto CSC, RGB out, Set op_656 bit
	{0x98, 0x03,0x54}, //2x24 bit SDR 444 interleaved mode 0
	{0x98, 0x05,0x28}, //AV Codes Off
	{0x98, 0x06,0xA0}, //No inversion on VS,HS pins
	{0x98, 0x0C,0x42}, //Power up part
	{0x98, 0x15,0x80}, //Disable Tristate of Pins
	{0x98, 0x19,0x98}, //LLC DLL phase
	{0x98, 0x33,0x40}, //LLC DLL MUX enable
	{0x98, 0xDD,0x00}, //ADI Required Write
	{0x98, 0xE7,0x04}, //ADI Required Write
	{0x98, 0x14,0x3F}, //drive strength High
	{0x4C, 0xB5,0x01}, //Setting MCLK to 256Fs
	{0x4C, 0xC3,0x80}, //ADI Required Write
	{0x4C, 0xCF,0x03}, //ADI Required Write
	{0x4C, 0xDB,0x80}, //ADI Required Write
	{0x68, 0xC0,0x03}, //ADI Required write
	{0x68, 0x00,0x08}, //Set HDMI Input Port A (BG_MEAS_PORT_SEL = 001b)
	{0x68, 0x02,0x03}, //ALL BG Ports enabled
	{0x68, 0x03,0x98}, //ADI Required Write
	{0x68, 0x10,0xA5}, //ADI Required Write
	{0x68, 0x1B,0x00}, //ADI Required Write
	{0x68, 0x45,0x04}, //ADI Required Write
	{0x68, 0x97,0xC0}, //ADI Required Write
	{0x68, 0x3E,0x69}, //ADI Required Write
	{0x68, 0x3F,0x46}, //ADI Required Write
	{0x68, 0x4E,0xFE}, //ADI Required Write
	{0x68, 0x4F,0x08}, //ADI Required Write
	{0x68, 0x50,0x00}, //ADI Required Write
	{0x68, 0x57,0xA3}, //ADI Required Write
	{0x68, 0x58,0x07}, //ADI Required Write
	{0x68, 0x6F,0x08}, //ADI Required Write
	{0x68, 0x83,0xFC}, //Enable clock terminators for port A & B
	{0x68, 0x84,0x03}, //FP MODE
	{0x68, 0x85,0x10}, //ADI Required Write
	{0x68, 0x86,0x9B}, //ADI Required Write
	{0x68, 0x89,0x03}, //HF Gain
	{0x68, 0x9B,0x03}, //ADI Required Write
	{0x68, 0x93,0x03}, //ADI Required Write
	{0x68, 0x5A,0x80}, //ADI Required Write
	{0x68, 0x9C,0x80}, //ADI Required Write
	{0x68, 0x9C,0xC0}, //ADI Required Write
	{0x68, 0x9C,0x00}, //ADI Required Write
	{0x68, 0x6C,0xA3}, //HPA takes its value from HPA_MAN_VALUE_X
	//{0x68, 0x00,0x09}, //to portB
	{0x68, 0x00,0x08},	 //to portA

	{0xff,0xff, 0xff}
};

